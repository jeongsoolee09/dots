set-window-option -g mode-keys vi

set-option -g default-shell "/bin/zsh"
# set-option -sa terminal-overrides ',XXX:RGB'
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

set -stg escape-time 0
setw -g mouse on
set-option -g renumber-windows on

set-option -g prefix C-a
unbind-key C-a
unbind-key C-v
bind-key C-a send-prefix
bind-key C-v send-prefix
set -g base-index 1

bind-key ";" split-window -h -c "#{pane_current_path}"
bind-key "\'" split-window -v -c "#{pane_current_path}"

bind-key "=" select-layout tiled

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key b break-pane
bind-key r rotate-window
bind-key C-z resize-pane -Z
bind-key C-d detach-client

bind-key - resize-pane -D 10
bind-key > resize-pane -R 10
bind-key < resize-pane -L 10
bind-key = resize-pane -U 10

unbind-key C-h

bind-key M-h resize-pane -L 10
bind-key M-j resize-pane -D 10
bind-key M-k resize-pane -U 10
bind-key M-l resize-pane -R 10

bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
bind-key bspace select-pane -L

# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

bind-key C-o rotate-window

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key . new-window -c "#{pane_current_path}"
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key C-[ copy-mode
bind-key ] paste-buffer

bind-key o copy-mode
bind-key y paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Set status bar background color to colour232/black
#set -g status-bg colour232

# Set windows backgrounded in the status bar to colour246/gray
#set -g status-fg colour246

# Status bar refresh rate (seconds)
set -g status-interval 1

# Status bar character length
set -g status-left-length 30

# Sets current selected window to colour208/orange
#set-window-option -g window-status-current-fg colour208

# Sets mode keys to use vim settings (for ? and / search in buffer scrolls)
set-window-option -g mode-keys vi

set -g @yank_action 'copy-pipe'

# On the left-side of status in green: print '{session_name} {user}@{hostname}'
#set -g status-left '#[fg=green](#S) #(whoami)@#H#[default]'

# On the right of status in colour228/pastel_yellow : print time 'H:M m.d.y'
#set -g status-right '#[fg=colour228]Pane: #P | #[fg=colour228]%a %m/%d/%Y %I:%M:%S%P'
#set -g status-right 'Pane: #P | %a %m/%d/%Y %I:%M:%S%P'

# Status Bar solarized-light
#if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
#if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
#if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# ============== tpm ===============

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

set -g @themepack 'powerline/block/cyan'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
